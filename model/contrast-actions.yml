groups:
  - id: attributes.contrast.actions
    type: attribute_group
    brief: "Actions that we track in Contrast"
    attributes:
      - id: action
        brief: >
          The type of action that was observed.
        requirement_level: required
        examples:
          - file-open-create
          - authn-request
        type:
          allow_custom_values: false
          members:
            - id: storage-query
              value: "storage-query"
              brief: "Functions that execute queries"
            - id: file-open-create
              value: "file-open-create"
              brief: "file open or create action"
            - id: url-forward
              value: "url-forward"
              brief: "Any function designed to forward a request to another URL"
            - id: url-redirect
              value: "url-redirect"
              brief: "Function that result in an http 302 redirect code sent to the client"
            - id: host-cmd-exec
              value: "host-cmd-exec"
              brief: "system shell command execution"
            - id: ldap-query
              value: "ldap-query"
              brief: "Functions that result in and ldap query operation"
            - id: smtp-exec
              value: "smtp-exec"
              brief: "Functions that result in an SMTP command execution"
            - id: outbound-service-call
              value: "outbound-service-call"
              brief: "Functions that result in external calls to other services"
            - id: authn-request
              value: "authn-request"
              brief: "Functions that perform authentication actions"
            - id: authz-request
              value: "authz-request"
              brief: "Functions that perform authorization actions"
            - id: el-execution
              value: "el-execution"
              brief: "Spring expression language execution"
            - id: ognl-execution
              value: "ognl-execution"
              brief: "Object-Graph Navigation Language expression execution."

  - id: attributes.contrast.action.metric
    type: attribute_group
    brief: "Describes attributes for Contrast Action metrics"
    attributes:
      - id: http.method
        type: string
        requirement_level: required
        brief: >
          http method used when the action was encountered.
        examples:
          - GET
          - POST
      - id: http.route
        type: string
        requirement_level: required
        brief: >
          http route used when the action was encountered.
        examples: "/foo/bar"

  - id: metric.http.server.action.total
    type: metric
    metric_name: http.server.action.total
    unit: "{action}"
    brief: "A counter of actions for contrast"
    instrument: counter
    attributes:
      - ref: action
      - ref: http.method
      - ref: http.route

  - id: attributes.contrast.action.span.authn
    prefix: contrast.authentication
    type: span
    brief: "Describes attributes for Contrast Action span of type authn-request"
    attributes:
      - id: mechanism
        brief: >
          An authentication mechanism is a specific method or approach used to
          verify the identity of a user, system, or entity attempting to access a resource.
        examples: [password, token, biometric]
        type:
          allow_custom_values: false
          members:
            - id: password
              value: "password"
              brief: "Users provide a username and password."
            - id: certificate
              value: "certificate"
              brief: "x509 certificate authentication or similar"
            - id: token
              value: "token"
              brief: "Involves using a physical or virtual token to authenticate a user"
            - id: biometric
              value: "biometric"
              brief: "file open or create action"
            - id: mfa
              value: "mfa"
              brief: "Two or more of the above mechanisms are used"

      - id: protocol
        brief: >
          An authentication protocol is a set of rules and procedures that
          dictate how authentication mechanisms should operate to establish
          trust and verify identities securely.
        examples: [oauth, saml, ldap, custom]
        type:
          allow_custom_values: false
          members:
            - id: saml
              value: "saml"
              brief: "Security Assertion Markup Language"
            - id: oauth
              value: "oauth"
              brief: "Open Authentication and OIDC"
            - id: ldap
              value: "ldap"
              brief: "Lightweight Directory Access Protocol"
            - id: kerberos
              value: "kerberos"
              brief: ""

  - id: attributes.contrast.action.span.authz
    prefix: contrast.authorization
    type: span
    brief: >
      Describes attributes for Contrast Action span of type authz-request
    attributes:
      - id: mechanism
        brief: >
          How are authz decisions made for the resource.
        examples: [rbac, dac, pbac]
        type:
          allow_custom_values: false
          members:
            - id: rbac
              value: "rbac"
              brief: Role Based Access Control
            - id: abac
              value: "abac"
              brief: Attribute Based Access Control
            - id: mac
              value: "mac"
              brief: >
                Mandatory Access Control (MAC) is a security model where access to resources is determined by
                the security labels assigned to subjects (users or processes) and objects (resources).
            - id: dac
              value: "dac"
              brief: Discretionary Access Control (DAC) is a model where owners of resources have the discretion to control access to their resources.
            - id: pbac
              value: "pbac"
              brief: Policy Based Access Control
            - id: hbac
              value: "hbac"
              brief: History Based Access Control
            - id: tbac
              value: "tbac"
              brief: Time Based Access Control

      - id: rbac.role
        brief: >
          Role Requested for authz check. The values here are very domain specific, but
          will always be normalized to a lowercase value in the data here.
        examples: [user, editor, manager]
        type: string
      - id: dac.permission
        brief: >
          Permission requested for access to the resource. The values here are very domain specific, but
          will always be normalized to a lowercase value in the data here.
        examples: [read, write, append, delete]
        type: string
      - id: mac.labels
        brief: >
          Labels on the requested resource. The values here are very domain specific, but
          will always be normalized to a lowercase value in the data here.
        examples: [top_secret, confidential, internal, public]
        type: string

  - id: contrast.action.span.authn
    type: span
    brief: "Describes attributes for Contrast Authentication Action spans"
    attributes:
      - ref: contrast.authentication.mechanism
      - ref: contrast.authentication.protocol

  - id: contrast.action.span.authz
    type: span
    brief: "Describes attributes for Contrast Authorization Action spans"
    attributes:
      - ref: contrast.authorization.mechanism
        requirement_level: recommended
      - ref: contrast.authorization.rbac.role
        requirement_level:
          recommended: If mechanism is 'rbac'
      - ref: contrast.authorization.dac.permission
        requirement_level:
          recommended: If mechanism is 'dac'
      - ref: contrast.authorization.mac.labels
        requirement_level:
          recommended: If mechanism is 'mac'
